[
	{
    "id": "1",
		"title": "Longest Common Prefix",
		"description": "<div><p>Write a function to find the longest common prefix string amongst an array of strings.</p><p>If there is no common prefix, return an empty string <code>\"\"</code>.</p><p>&nbsp;</p> <p><strong>Example 1:</strong></p><pre><strong>Input:</strong> strs = [\"flower\",\"flow\",\"flight\"] <strong>Output:</strong> \"fl\" </pre><p><strong>Example 2:</strong></p><pre><strong>Input:</strong> strs = [\"dog\",\"racecar\",\"car\"] <strong>Output:</strong> \"\" <strong>Explanation:</strong> There is no common prefix among the input strings. </pre><p>&nbsp;</p> <p><strong>Constraints:</strong></p><ul> <li><code>1 &lt;= strs.length &lt;= 200</code></li> <li><code>0 &lt;= strs[i].length &lt;= 200</code></li> <li><code>strs[i]</code> consists of only lowercase English letters.</li> </ul> </div>",
		"testCases": [
			{ "input": "[\"flower\",\"flow\",\"flight\"]", "output": "fl" },
			{
				"input": "[\"dog\",\"racecar\",\"car\"]",
				"output": ""
			}
		]
	},
  {
    "id": "4",
		"title": "Majority Element",
		"description": "<div><p>Given an array <code>nums</code> of size <code>n</code>, return <em>the majority element</em>.</p> <p>The majority element is the element that appears more than <code>⌊n / 2⌋</code> times. You may assume that the majority element always exists in the array.</p> <p>&nbsp;</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [3,2,3] <strong>Output:</strong> 3 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [2,2,1,1,1,2,2] <strong>Output:</strong> 2 </pre> <p>&nbsp;</p> <p><strong>Constraints:</strong></p> <ul><li><code>n == nums.length</code></li><li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li><li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li></ul><p>&nbsp;</p> <strong>Follow-up:</strong> Could you solve the problem in linear time and in <code>O(1)</code> space?</div>",
		"testCases": [
			{ "input": "[3,2,3]", "output": "3" },
			{
				"input": "[2,2,1,1,1,2,2]",
				"output": "2"
			}
		]
	}
]